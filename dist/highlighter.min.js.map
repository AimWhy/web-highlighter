{"version":3,"sources":["webpack://Highlighter/webpack/universalModuleDefinition","webpack://Highlighter/webpack/bootstrap","webpack://Highlighter/./src/types/index.ts","webpack://Highlighter/./src/util/const.ts","webpack://Highlighter/./src/util/dom.ts","webpack://Highlighter/./src/model/source.ts","webpack://Highlighter/./node_modules/eventemitter3/index.js","webpack://Highlighter/./src/model/range.ts","webpack://Highlighter/./src/index.ts","webpack://Highlighter/./src/util/camel.ts","webpack://Highlighter/./src/util/uuid.ts","webpack://Highlighter/./src/util/range.ts","webpack://Highlighter/./src/data/cache.ts","webpack://Highlighter/./src/paint/index.ts","webpack://Highlighter/./src/paint/render.ts","webpack://Highlighter/./src/addons/store/local.store.ts","webpack://Highlighter/./src/addons/store/types.ts","webpack://Highlighter/./src/util/defer.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SplitType","ERROR","EventType","SelectedNodeType","camel_1","ID_DIVISION","LOCAL_STORE_KEY","STYLE_TAG_ID","DATASET_IDENTIFIER","DATASET_IDENTIFIER_EXTRA","DATASET_SPLIT_TYPE","CAMEL_DATASET_IDENTIFIER","default","CAMEL_DATASET_IDENTIFIER_EXTRA","CAMEL_DATASET_SPLIT_TYPE","DEFAULT_OPTIONS","$root","document","exceptSelectors","style","highlightClassName","styles","STYLE_TAG_TEXT","const_1","types_1","getDomMeta","$node","offset","$originParent","parentNode","dataset","getOriginParent","index","tagName","$list","getElementsByTagName","length","countGlobalNodeIndex","preNodeOffset","$text","nodeStack","$curNode","pop","children","childNodes","push","nodeType","textContent","getTextPreOffset","parentTagName","parentIndex","textOffset","queryDomByMeta","meta","$parent","curOffset","startOffset","getTextChildByOffset","isMatchSelector","selector","test","className","replace","classList","contains","id","toUpperCase","getSelectedNodes","$startNode","$endNode","endOffset","Text","$element_1","some","splitText","passedNode","nextSibling","type","text","splitType","both","selectedNodes","withinSelectedRange","curNode","node","head","tail","none","isHighlightWrapNode","getDomPosition","offsetTop","offsetLeft","offsetParent","top","left","getAllHighlightDom","$roots","Array","isArray","$wraps","querySelectorAll","concat","getHighlightDomById","$highlights","reg","RegExp","k","$n","extraId","range_1","dom_1","HighlightSource","startMeta","endMeta","this","deSerialize","start","end","has","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","source_1","uuid_1","HighlightRange","$start","$end","frozen","console","warn","RANGE_NODE_INVALID","removeDomRange","removeSelection","fromSelection","range","getDomRange","startContainer","endContainer","toString","serialize","cache_1","paint_1","local_store_1","Highlighter","_super","options","_this","_highlighFromHRange","source","paint","highlightRange","DOM_SELECTION_EMPTY","cache","save","CREATE","sources","_handleSelection","e","_handleHighlightHover","$target","target","_hoverId","HOVER_OUT","HOVER","run","addEventListener","stop","removeEventListener","dispose","getDoms","addClass","forEach","add","removeClass","remove","setOption","__assign","getHighlightPosition","startPosition","endPosition","height","offsetHeight","width","offsetWidth","fromRange","hRange","RANGE_INVALID","__extends","buildFromJSON","obj","schemeValidate","fromSource","renderedSources","highlightSource","HIGHLIGHT_SOURCE_NONE_RENDER","error","SOURCE_TYPE_ERROR","removeHighlight","REMOVE","ids","removeAll","removeAllHighlight","LocalStore","str","split","reduce","idx","createUUID","a","Math","random","selection","getSelection","isCollapsed","debug","getRangeAt","removeAllRanges","Cache","_data","Map","getAll","map","CACHE_SET_ERROR","set","delete","list","_b","__values","_c","next","done","pair","render_1","Paint","styleId","$style","getElementById","$cssNode","createTextNode","createElement","appendChild","HIGHLIGHT_RANGE_FROZEN","_a","render","$s","$fr","createDocumentFragment","$c","cloneNode","replaceChild","$spans","$toRemove","$idToUpdate","$extraToUpdate","spanId","spanExtraIds","shift","join","extraIds","wrapHighlight","selected","$wrap","$prev","previousSibling","$next","parentId","parentExtraId","$span","headSplit","tailSplit","parentElement","defer_1","StoreType","LOCAL","storeToJson","store","localStorage","getItem","JSON","parse","jsonToStore","stores","setItem","stringify","data","hs","resolve","forceSave","filter","info","splice","getDefer","reject","promise","Promise","defer"],"mappings":"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","file":"highlighter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Highlighter\"] = factory();\n\telse\n\t\troot[\"Highlighter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export interface HighlighterOptions {\n    $root: HTMLElement;\n    exceptSelectors: Array<string>;\n    style?: {\n        highlightClassName?: string;\n    }\n};\n\nexport interface PainterOptions {\n    $root: HTMLElement,\n    highlightClassName?: string,\n    exceptSelectors: Array<string>\n};\n\nexport enum SplitType {\n    none = 'none',\n    head = 'head',\n    tail = 'tail',\n    both = 'both'\n};\n\nexport enum ERROR {\n    DOM_TYPE_ERROR = '[DOM] Receive wrong node type.',\n    DOM_SELECTION_EMPTY = '[DOM] The selection contains no dom node, may be you except them.',\n    RANGE_INVALID = '[RANGE] Got invalid dom range, can\\'t convert to a valid highlight range.',\n    RANGE_NODE_INVALID = '[RANGE] Start or end node isn\\'t a text node, it may occur an error.',\n    DB_ID_DUPLICATE_ERROR = '[STORE] Unique id conflict.',\n    CACHE_SET_ERROR = '[CACHE] Cache.data can\\'t be set manually, please use .save().',\n    SOURCE_TYPE_ERROR = '[SOURCE] Object isn\\'t a highlight source instance.',\n    HIGHLIGHT_RANGE_FROZEN = '[HIGHLIGHT_RANGE] A highlight range must be frozen before render.',\n    HIGHLIGHT_SOURCE_NONE_RENDER = '[HIGHLIGHT_SOURCE] This highlight source isn\\'t rendered.'\n        + ' May be the exception skips it or the dom structure has changed.'\n};\n\nexport enum EventType {\n    CREATE = 'selection:create',\n    REMOVE = 'selection:remove',\n    MODIFY = 'selection:modify',\n    HOVER = 'selection:hover',\n    HOVER_OUT = 'selection:hover-out'\n};\n\nexport enum SelectedNodeType {\n    text = 'text',\n    span = 'span'\n};\n\nexport interface SelectedNode {\n    $node: Text | Node,\n    type: SelectedNodeType,\n    splitType: SplitType\n};\n\nexport interface DomMeta {\n    parentTagName: string;\n    parentIndex: number;\n    textOffset: number;\n}\n\nexport interface DomNode {\n    $node: Node;\n    offset: number;\n}\n\nexport interface DomPosition {\n    top: number;\n    left: number;\n}\n\nexport interface HighlightPosition {\n    start: {\n        top: number;\n        left: number;\n    };\n    end: {\n        top: number;\n        left: number;\n    }\n}","// cSpell:ignore mengshou\nimport camel from './camel';\nexport const ID_DIVISION = ';';\nexport const LOCAL_STORE_KEY = 'highlight-mengshou';\nexport const STYLE_TAG_ID = 'highlight-mengshou-style';\n\nexport const DATASET_IDENTIFIER = 'highlight-id';\nexport const DATASET_IDENTIFIER_EXTRA = 'highlight-id-extra';\nexport const DATASET_SPLIT_TYPE = 'highlight-split-type';\nexport const CAMEL_DATASET_IDENTIFIER = camel(DATASET_IDENTIFIER);\nexport const CAMEL_DATASET_IDENTIFIER_EXTRA = camel(DATASET_IDENTIFIER_EXTRA);\nexport const CAMEL_DATASET_SPLIT_TYPE = camel(DATASET_SPLIT_TYPE);\n\nexport const DEFAULT_OPTIONS = {\n    $root: window.document,\n    exceptSelectors: null,\n    style: {\n        highlightClassName: 'highlight-mengshou-wrap'\n    }\n};\n\nconst styles = DEFAULT_OPTIONS.style;\nexport const STYLE_TAG_TEXT = `\n    .${styles.highlightClassName} {\n        background: #ff9;\n        cursor: pointer;\n    }\n    .${styles.highlightClassName}.active {\n        background: #ffb;\n    }\n`;\n","import {\n    ID_DIVISION,\n    DATASET_IDENTIFIER,\n    CAMEL_DATASET_IDENTIFIER,\n    CAMEL_DATASET_IDENTIFIER_EXTRA\n} from './const';\nimport {\n    SplitType,\n    SelectedNode,\n    DomMeta,\n    DomNode,\n    DomPosition,\n    SelectedNodeType\n} from '../types';\n\nconst countGlobalNodeIndex = ($node: Node): number => {\n    const tagName = ($node as HTMLElement).tagName;\n    const $list = document.getElementsByTagName(tagName);\n    for (let i = 0; i < $list.length; i++) {\n        if ($node === $list[i]) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * get the text dom node & offset by parent node and overall offset\n * @param $parent parent node\n * @param offset offset in all text\n */\nconst getTextChildByOffset = ($parent: Node, offset: number): DomNode => {\n    const nodeStack: Array<Node> = [$parent];\n\n    let $curNode: Node = null;\n    let curOffset = 0;\n    let startOffset = 0;\n    while ($curNode = nodeStack.pop()) {\n        const children = $curNode.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            nodeStack.push(children[i]);\n        }\n\n        if ($curNode.nodeType === 3) {\n            startOffset = offset - curOffset;\n            curOffset += $curNode.textContent.length;\n            if (curOffset >= offset) {\n                break;\n            }\n        }\n    }\n\n    return {\n        $node: $curNode,\n        offset: startOffset\n    };\n}\n\n/**\n * text total length in all predecessors (text nodes) in the root node\n * (without offset in current node)\n */\nconst getTextPreOffset = ($root: Node, $text: Node): number => {\n    const nodeStack: Array<Node> = [$root];\n\n    let $curNode: Node = null;\n    let offset = 0;\n    while ($curNode = nodeStack.pop()) {\n        const children = $curNode.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            nodeStack.push(children[i]);\n        }\n\n        if ($curNode.nodeType === 3 && $curNode !== $text) {\n            offset += $curNode.textContent.length;\n        }\n        else if ($curNode.nodeType === 3) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n/**\n * find the original dom parent node (none highlight dom)\n */\nconst getOriginParent = ($node: Text): HTMLElement => {\n    let $originParent = $node.parentNode as HTMLElement;\n    while (\n        $originParent.dataset\n        && $originParent.dataset[CAMEL_DATASET_IDENTIFIER]\n    ) {\n        $originParent = $originParent.parentNode as HTMLElement;\n    }\n    return $originParent;\n};\n\nexport const getDomMeta = ($node: Text, offset: number): DomMeta => {\n    const $originParent = getOriginParent($node);\n    const index = countGlobalNodeIndex($originParent);\n    const preNodeOffset = getTextPreOffset($originParent, $node);\n    const tagName = $originParent.tagName;\n    return {\n        parentTagName: tagName,\n        parentIndex: index,\n        textOffset: preNodeOffset + offset\n    };\n};\n\n/**\n * get current dom node by DomMeta info\n * @param meta DomMeta\n */\nexport const queryDomByMeta = (meta: DomMeta): {offset: number, $node: Node} => {\n    const {\n        parentTagName: tagName,\n        parentIndex: index,\n        textOffset\n    } = meta;\n    const $parent = document.getElementsByTagName(tagName)[index];\n    return getTextChildByOffset($parent, textOffset);\n};\n\n/**\n * support type\n *  - class: .title, .main-nav\n *  - id: #nav, #js-toggle-btn\n *  - tag: div, p, span\n */\nconst isMatchSelector = ($node: HTMLElement, selector: string): boolean => {\n    if (!$node) {\n        return false;\n    }\n    if (/^\\./.test(selector)) {\n        const className = selector.replace(/^\\./, '');\n        return $node && $node.classList.contains(className);\n    }\n    else if (/^#/.test(selector)) {\n        const id = selector.replace(/^#/, '');\n        return $node && $node.id === id;\n    }\n    else {\n        const tagName = selector.toUpperCase()\n        return $node && $node.tagName === tagName;\n    }\n}\n\n/**\n * [DFS] get all the dom nodes between the start and end node\n */\nexport const getSelectedNodes = (\n    $root: HTMLElement | Document = window.document,\n    $startNode: Node,\n    $endNode: Node,\n    startOffset: number,\n    endOffset: number,\n    exceptSelectors: Array<string>\n): SelectedNode[] => {\n    // split current node when the start and end is the same\n    if ($startNode === $endNode && $startNode instanceof Text) {\n\n        let $element = $startNode as Node;\n        while ($element) {\n            if ($element.nodeType === 1\n                && exceptSelectors\n                && exceptSelectors.some(s => isMatchSelector($element as HTMLElement, s))\n            ) {\n                return [];\n            }\n            $element = $element.parentNode;\n        }\n\n        $startNode.splitText(startOffset);\n        let passedNode = $startNode.nextSibling as Text;\n        passedNode.splitText(endOffset - startOffset);\n        return [{\n            $node: passedNode,\n            type: SelectedNodeType.text,\n            splitType: SplitType.both\n        }];\n    }\n\n    const nodeStack: Array<HTMLElement | Document | ChildNode | Text> = [$root];\n    const selectedNodes: SelectedNode[] = [];\n\n    let withinSelectedRange = false;\n    let curNode: Node = null;\n    while (curNode = nodeStack.pop()) {\n\n        // do not traverse the excepted node\n        if (\n            curNode.nodeType === 1\n            && exceptSelectors\n            && exceptSelectors.some(s => isMatchSelector(curNode as HTMLElement, s))\n        ) {\n            continue;\n        }\n\n        const children = curNode.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            nodeStack.push(children[i]);\n        }\n\n        // only push text node\n        if (curNode === $startNode) {\n            if (curNode.nodeType === 3) {\n                // 选取后半段\n                (curNode as Text).splitText(startOffset);\n                const node = curNode.nextSibling as Text;\n                selectedNodes.push({\n                    $node: node,\n                    type: SelectedNodeType.text,\n                    splitType: SplitType.head\n                });\n\n            }\n            // meet the start node (begin traverse)\n            withinSelectedRange = true;\n        }\n        else if (curNode === $endNode) {\n            if (curNode.nodeType === 3) {\n                const node = (curNode as Text);\n                // 截取前半段\n                node.splitText(endOffset);\n                selectedNodes.push({\n                    $node: node,\n                    type: SelectedNodeType.text,\n                    splitType: SplitType.tail\n                });\n            }\n            // meet the end node\n            break;\n        }\n        // text nodes between the range\n        else if (withinSelectedRange && curNode.nodeType === 3) {\n            selectedNodes.push({\n                $node: curNode as Text,\n                type: SelectedNodeType.text,\n                splitType: SplitType.none\n            });\n        }\n    }\n    return selectedNodes;\n};\n\n/**\n * is current node the highlight wrap node\n */\nexport const isHighlightWrapNode = ($node: HTMLElement): boolean => (\n    !!$node.dataset && !!$node.dataset[CAMEL_DATASET_IDENTIFIER]\n);\n\n/**\n * calc dom position\n */\nexport const getDomPosition = ($node: HTMLElement): DomPosition => {\n    let offsetTop = 0;\n    let offsetLeft = 0;\n    while ($node.nodeType !== 1) {\n        $node = $node.parentNode as HTMLElement;\n    }\n\n    while ($node) {\n        offsetTop += $node.offsetTop;\n        offsetLeft += $node.offsetLeft;\n        $node = $node.offsetParent as HTMLElement;\n    }\n\n    return {\n        top: offsetTop,\n        left: offsetLeft\n    };\n};\n\nexport const getAllHighlightDom = ($roots: HTMLElement | Array<HTMLElement>): Array<HTMLElement> => {\n    if (!Array.isArray($roots)) {\n        $roots = [$roots];\n    }\n\n    const $wraps = [];\n    for (let i = 0; i < $roots.length; i++) {\n        const $list = $roots[i].querySelectorAll(`[data-${DATASET_IDENTIFIER}]`);\n        $wraps.concat($list);\n        }\n    return $wraps;\n}\n\n/**\n * get highlight wrap dom node by highlight id\n */\nexport const getHighlightDomById = ($root: HTMLElement, id: String): Array<HTMLElement> => {\n    const $highlights = [];\n    const reg = new RegExp(`(${id}\\\\${ID_DIVISION}|\\\\${ID_DIVISION}?${id}$)`);\n    const $list = $root.querySelectorAll(`[data-${DATASET_IDENTIFIER}]`);\n    for (let k = 0; k < $list.length; k++) {\n        const $n = $list[k] as HTMLElement;\n        const nid = $n.dataset[CAMEL_DATASET_IDENTIFIER];\n        if (nid === id) {\n            $highlights.push($n);\n            continue;\n        }\n        const extraId = $n.dataset[CAMEL_DATASET_IDENTIFIER_EXTRA];\n        if (reg.test(extraId)) {\n            $highlights.push($n);\n            continue;\n        }\n    }\n    return $highlights;\n};","import {DomMeta} from '../types';\nimport HighlightRange from './range';\nimport {queryDomByMeta} from '../util/dom';\n\nclass HighlightSource {\n    startMeta: DomMeta;\n    endMeta: DomMeta;\n    text: string;\n    id: string;\n    __isHighlightSource: {};\n\n    constructor(\n        startMeta: DomMeta,\n        endMeta: DomMeta,\n        text: string,\n        id: string\n    ) {\n        this.startMeta = startMeta;\n        this.endMeta = endMeta;\n        this.text = text;\n        this.id = id;\n    }\n\n    deSerialize() {\n        const start = queryDomByMeta(this.startMeta);\n        const end = queryDomByMeta(this.endMeta);\n        const range = new HighlightRange(\n            start.$node,\n            end.$node,\n            start.offset,\n            end.offset,\n            this.text,\n            this.id,\n            true\n        );\n        return range;\n    }\n}\n\nexport default HighlightSource;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import HighlightSource from './source';\nimport uuid from '../util/uuid';\nimport {DomNode, ERROR} from '../types';\nimport {getDomMeta} from '../util/dom';\nimport {getDomRange, removeSelection} from '../util/range';\n\nclass HighlightRange {\n    start: DomNode;\n    end: DomNode;\n    text: string;\n    id: string;\n    frozen: boolean;\n\n    static removeDomRange() {\n        removeSelection();\n    }\n\n    static fromSelection() {\n        const range = getDomRange();\n        if (!range) {\n            return null;\n        }\n        return new HighlightRange(\n            range.startContainer,\n            range.endContainer,\n            range.startOffset,\n            range.endOffset,\n            range.toString()\n        );\n    }\n\n    constructor(\n        $start: Node,\n        $end: Node,\n        startOffset: number,\n        endOffset: number,\n        text: string,\n        id?: string,\n        frozen: boolean = false\n    ) {\n        if ($start.nodeType !== 3 || $end.nodeType !== 3) {\n            console.warn(ERROR.RANGE_NODE_INVALID);\n        }\n\n        this.start = {\n            $node: $start,\n            offset: startOffset\n        };\n        this.end = {\n            $node: $end,\n            offset: endOffset\n        };\n        this.text = text;\n        this.id = id || uuid();\n        this.frozen = frozen;\n    }\n\n    serialize(): HighlightSource {\n        const startMeta = getDomMeta(this.start.$node as Text, this.start.offset);\n        const endMeta = getDomMeta(this.end.$node as Text, this.end.offset);\n        this.frozen = true;\n        return new HighlightSource(startMeta, endMeta, this.text, this.id);\n    }\n}\n\nexport default HighlightRange;","import * as EventEmitter from 'eventemitter3';\nimport {EventType, HighlighterOptions, ERROR, HighlightPosition} from './types';\nimport {DEFAULT_OPTIONS, CAMEL_DATASET_IDENTIFIER} from './util/const';\nimport {isHighlightWrapNode, getHighlightDomById, getDomPosition, getAllHighlightDom} from './util/dom';\nimport HighlightRange from './model/range';\nimport HighlightSource from './model/source';\nimport Cache from './data/cache';\nimport Paint from './paint';\nimport Store from './addons/store/local.store';\n\nconst schemeValidate = obj => {\n    if (!obj.startMeta) {\n        return false;\n    }\n    if (!obj.endMeta) {\n        return false;\n    }\n    if (!obj.text) {\n        return false;\n    }\n    if (!obj.id) {\n        return false;\n    }\n    return true;\n};\n\nexport default class Highlighter extends EventEmitter {\n    static event = EventType;\n    static LocalStore = Store;\n    static buildFromJSON(obj: HighlightSource) {\n        if (schemeValidate(obj)) {\n            return null;\n        }\n\n        const source = new HighlightSource(\n            obj.startMeta,\n            obj.endMeta,\n            obj.text,\n            obj.id\n        );\n        return source;\n    }\n\n    options: HighlighterOptions;\n    paint: Paint;\n    cache: Cache;\n    private _hoverId: string;\n\n    constructor(options: HighlighterOptions) {\n        super();\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...options\n        };\n        this.paint = new Paint({\n            $root: this.options.$root,\n            highlightClassName: this.options.style.highlightClassName,\n            exceptSelectors: this.options.exceptSelectors\n        });\n        this.cache = new Cache();\n        this.options.$root.addEventListener('mouseover', this._handleHighlightHover);\n    }\n\n    /*================= you should not use it outside =================*/\n    private _highlighFromHRange = (range: HighlightRange): HighlightSource => {\n        const source: HighlightSource = range.serialize();\n        const $wraps = this.paint.highlightRange(range);\n\n        if ($wraps.length === 0) {\n            console.warn(ERROR.DOM_SELECTION_EMPTY);\n            return null;\n        }\n        this.cache.save(source);\n        this.emit(EventType.CREATE, {sources: [source]});\n        return source;\n    }\n\n    private _handleSelection = (e?: Event) => {\n        const range = HighlightRange.fromSelection();\n        if (!range) {\n            return;\n        }\n        this._highlighFromHRange(range);\n        HighlightRange.removeDomRange();\n    }\n\n    private _handleHighlightHover = e => {\n        const $target = e.target as HTMLElement;\n        if (!isHighlightWrapNode($target)) {\n            // leave highlight\n            if (this._hoverId) {\n                this.emit(EventType.HOVER_OUT, {id: this._hoverId});\n            }\n\n            this._hoverId = null;\n            return;\n        }\n\n        const id = $target.dataset ? $target.dataset[CAMEL_DATASET_IDENTIFIER] : undefined;\n        // prevent triggering hover in the same highlight\n        if (this._hoverId === id) {\n            return;\n        }\n        // move to a continuous wrap, trigger hover out firstly\n        if (this._hoverId) {\n            this.emit(EventType.HOVER_OUT, {id: this._hoverId});\n        }\n\n        this._hoverId = id;\n        this.emit(EventType.HOVER, {id: this._hoverId});\n    }\n    /*================= you should not use it outside =================*/\n\n    run = (): Highlighter => {\n        this.options.$root.addEventListener('mouseup', this._handleSelection);\n        return this;\n    }\n\n    stop = (): Highlighter => {\n        this.options.$root.removeEventListener('mouseup', this._handleSelection);\n        return this;\n    }\n\n    dispose = (): Highlighter => {\n        this.options.$root.removeEventListener('mouseover', this._handleHighlightHover);\n        this.options.$root.removeEventListener('mouseup', this._handleSelection);\n        return this;\n    }\n\n    getDoms = (id?: string): Array<HTMLElement> => {\n        return id ? getHighlightDomById(this.options.$root, id) : getAllHighlightDom(this.options.$root);\n    }\n\n    addClass = (className: string, id?: string): Highlighter => {\n        this.getDoms(id).forEach($n => $n.classList.add(className));\n        return this;\n    }\n\n    removeClass = (className: string, id?: string): Highlighter => {\n        this.getDoms(id).forEach($n => $n.classList.remove(className));\n        return this;\n    }\n\n    setOption = (options: HighlighterOptions): Highlighter => {\n        this.options = {\n            ...this.options,\n            ...options\n        };\n        this.paint = new Paint({\n            $root: this.options.$root,\n            highlightClassName: this.options.style.highlightClassName,\n            exceptSelectors: this.options.exceptSelectors\n        });\n        return;\n    }\n\n    getHighlightPosition = (id: string): HighlightPosition => {\n        const $wraps = this.getDoms(id);\n        const startPosition = getDomPosition($wraps[0]);\n        const endPosition = getDomPosition($wraps[$wraps.length - 1]);\n        const height = $wraps[$wraps.length - 1].offsetHeight;\n        const width = $wraps[$wraps.length - 1].offsetWidth;\n\n        return {\n            start: {top: startPosition.top, left: startPosition.left},\n            end: {top: endPosition.top + height, left: endPosition.left + width}\n        };\n    }\n\n    fromSource(sources: HighlightSource[] | HighlightSource = []): Highlighter {\n        const list = Array.isArray(sources)\n            ? sources as HighlightSource[]\n            : [sources as HighlightSource];\n\n        const renderedSources: Array<HighlightSource> = [];\n        list.forEach(s => {\n            if (!(s instanceof HighlightSource)) {\n                console.error(ERROR.SOURCE_TYPE_ERROR);\n                return;\n            }\n            const $nodes = this.paint.highlightSource(s);\n            if ($nodes.length > 0) {\n                renderedSources.push(s);\n            }\n            else {\n                console.warn(ERROR.HIGHLIGHT_SOURCE_NONE_RENDER, s);\n            }\n        });\n        this.emit(EventType.CREATE, {sources: renderedSources});\n        this.cache.save(sources);\n        return this;\n    }\n\n    fromRange = (range: Range): HighlightSource => {\n        const hRange = new HighlightRange(\n            range.startContainer,\n            range.endContainer,\n            range.startOffset,\n            range.endOffset,\n            range.toString()\n        );\n        if (!hRange) {\n            console.warn(ERROR.RANGE_INVALID);\n            return null;\n        }\n        return this._highlighFromHRange(hRange);\n    }\n\n    remove(id: string): Highlighter {\n        if (!id) {\n            return;\n        }\n        this.paint.removeHighlight(id);\n        this.cache.remove(id);\n        this.emit(EventType.REMOVE, {ids: [id]});\n        return this;\n    }\n\n    removeAll(): Highlighter {\n        this.paint.removeAllHighlight();\n        const ids = this.cache.removeAll();\n        this.emit(EventType.REMOVE, {ids: ids});\n        return this;\n    }\n}\n","export default (str: string): string => (\n    str.split('-').reduce((str, s, idx) => str + (idx === 0 ? s: s[0].toUpperCase() + s.slice(1)), '')\n);\n","export default function createUUID(a?): string {\n    return a ? (a ^ Math.random() * 16 >> a / 4).toString(16)\n        : ((<unknown>[1e7] as string) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, createUUID);\n}","export const getDomRange = (): Range => {\n    const selection = window.getSelection();\n    if (selection.isCollapsed) {\n        console.debug('no text selected');\n        return null;\n    }\n    return selection.getRangeAt(0);\n};\n\nexport const removeSelection = (): void => {\n    window.getSelection().removeAllRanges();\n};","import * as EventEmitter from 'eventemitter3';\nimport HighlightSource from '../model/source';\nimport {ERROR} from '../types'\n\nclass Cache extends EventEmitter {\n    private _data: Map<string, HighlightSource> = new Map();\n\n    constructor() {\n        super();\n    }\n\n    get data() {\n        return this.getAll();\n    }\n\n    set data(map) {\n        throw ERROR.CACHE_SET_ERROR;\n    }\n\n    save(source: HighlightSource | HighlightSource[]): void {\n        if (!Array.isArray(source)) {\n            this._data.set(source.id, source);\n            return;\n        }\n        source.forEach(s => this._data.set(s.id, s));\n    }\n\n    get(id: string): HighlightSource {\n        return this._data.get(id);\n    }\n\n    remove(id: string): void {\n        this._data.delete(id);\n    }\n\n    getAll(): HighlightSource[] {\n        const list: HighlightSource[] = [];\n        this._data = new Map();\n        for (let pair of this._data) {\n            list.push(pair[1]);\n        }\n        return list;\n    }\n\n    removeAll(): string[] {\n        const ids: string[] = [];\n        for (let pair of this._data) {\n            ids.push(pair[0]);\n        }\n        this._data = new Map();\n        return ids;\n    }\n}\n\nexport default Cache;","import HighlightSource from '../model/source';\nimport HighlightRange from '../model/range';\nimport {render} from './render';\nimport {ERROR, PainterOptions} from '../types';\nimport {\n    ID_DIVISION,\n    STYLE_TAG_ID,\n    STYLE_TAG_TEXT,\n    DATASET_IDENTIFIER,\n    CAMEL_DATASET_IDENTIFIER,\n    CAMEL_DATASET_IDENTIFIER_EXTRA\n} from '../util/const';\n\nexport default class Paint {\n    options: PainterOptions;\n    $style: HTMLStyleElement;\n    styleId: string;\n\n    constructor(options?: PainterOptions) {\n        this.options = {\n            $root: options.$root,\n            exceptSelectors: options.exceptSelectors,\n            highlightClassName: options.highlightClassName\n        };\n        this.styleId = STYLE_TAG_ID;\n\n        let $style: HTMLStyleElement = document.getElementById(this.styleId) as HTMLStyleElement;\n        if (!$style) {\n            const $cssNode = document.createTextNode(STYLE_TAG_TEXT);\n            $style = document.createElement('style');\n            $style.id = this.styleId;\n            $style.appendChild($cssNode);\n            document.head.appendChild($style);\n        }\n\n        this.$style = $style;\n    }\n\n    highlightRange(range: HighlightRange): Array<HTMLElement> {\n        if (!range.frozen) {\n            throw ERROR.HIGHLIGHT_RANGE_FROZEN;\n        }\n        const {$root, highlightClassName, exceptSelectors} = this.options;\n        return render($root, range, exceptSelectors, highlightClassName);\n    }\n\n    highlightSource(source: HighlightSource): Array<HTMLElement> {\n        const range = source.deSerialize();\n        return this.highlightRange(range);\n    }\n\n    removeAllHighlight() {\n        const $spans = document.querySelectorAll(`[data-${DATASET_IDENTIFIER}]`);\n        $spans.forEach($s => {\n            const $parent = $s.parentNode;\n            const $fr = document.createDocumentFragment();\n            $s.childNodes.forEach($c => $fr.appendChild($c.cloneNode(false)));\n            $parent.replaceChild($fr, $s);\n        });\n    }\n\n    removeHighlight(id: string) {\n        const reg = new RegExp(`(${id}\\\\${ID_DIVISION}|\\\\${ID_DIVISION}?${id}$)`);\n        const $spans = document.querySelectorAll(`span[data-${DATASET_IDENTIFIER}]`) as NodeListOf<HTMLElement>;\n        const $toRemove: HTMLElement[] = [];\n        const $idToUpdate: HTMLElement[] = [];\n        const $extraToUpdate: HTMLElement[] = [];\n        for (let i = 0; i < $spans.length; i++) {\n            const spanId = $spans[i].dataset[CAMEL_DATASET_IDENTIFIER];\n            const spanExtraIds = $spans[i].dataset[CAMEL_DATASET_IDENTIFIER_EXTRA];\n            // 为当前待删除 id，同时没有其他 id，需要直接删除\n            if (spanId === id && !spanExtraIds) {\n                $toRemove.push($spans[i]);\n            }\n            // id 为当前为待删除 id，但具有其他 id（其他 highlight 也经过该区域）\n            else if (spanId === id) {\n                $idToUpdate.push($spans[i]);\n            }\n            // id 不为当前待删除 id，但其他 id 中包含该 id\n            else if (spanId !== id && reg.test(spanExtraIds)) {\n                $extraToUpdate.push($spans[i]);\n            }\n        }\n\n        $toRemove.forEach($s => {\n            const $parent = $s.parentNode;\n            const $fr = document.createDocumentFragment();\n            $s.childNodes.forEach($c => $fr.appendChild($c.cloneNode(false)));\n            $parent.replaceChild($fr, $s);\n        });\n\n        $idToUpdate.forEach($s => {\n            const dataset = $s.dataset;\n            const ids = dataset[CAMEL_DATASET_IDENTIFIER_EXTRA].split(ID_DIVISION);\n            dataset[CAMEL_DATASET_IDENTIFIER] = ids.shift();\n            dataset[CAMEL_DATASET_IDENTIFIER_EXTRA] = ids.join(ID_DIVISION);\n        });\n\n        $extraToUpdate.forEach($s => {\n            const extraIds = $s.dataset[CAMEL_DATASET_IDENTIFIER_EXTRA];\n            $s.dataset[CAMEL_DATASET_IDENTIFIER_EXTRA] = extraIds.replace(reg, '');\n        });\n    }\n};\n","import HighlightRange from '../model/range';\nimport {SplitType,SelectedNode} from '../types';\nimport {getSelectedNodes, isHighlightWrapNode} from '../util/dom';\nimport {\n    ID_DIVISION,\n    DEFAULT_OPTIONS,\n    CAMEL_DATASET_SPLIT_TYPE,\n    CAMEL_DATASET_IDENTIFIER,\n    CAMEL_DATASET_IDENTIFIER_EXTRA\n} from '../util/const'\n\n/**\n * wrap a dom node with highlight wrap\n */\nconst wrapHighlight = (\n    selected: SelectedNode,\n    range: HighlightRange,\n    className?: string\n): HTMLElement => {\n    const $parent = selected.$node.parentNode as HTMLElement;\n    const $prev = selected.$node.previousSibling;\n    const $next = selected.$node.nextSibling;\n\n    let $wrap: HTMLElement;\n    // text node, not in a highlight wrap -> should wrap in a highlight wrap\n    if (!isHighlightWrapNode($parent)) {\n        className = className || DEFAULT_OPTIONS.style.highlightClassName;\n\n        $wrap = document.createElement('span');\n        $wrap.classList.add(className);\n\n        $wrap.dataset[CAMEL_DATASET_IDENTIFIER] = range.id;\n        $wrap.dataset[CAMEL_DATASET_SPLIT_TYPE] = selected.splitType;\n\n        $wrap.appendChild(selected.$node.cloneNode(false));\n        selected.$node.parentElement.replaceChild($wrap, selected.$node);\n    }\n    // text node, in a highlight wrap -> should split the highlight wrap\n    else if (isHighlightWrapNode($parent) && ($prev || $next)) {\n        const $fr = document.createDocumentFragment();\n        const parentId = $parent.dataset[CAMEL_DATASET_IDENTIFIER];\n        const parentExtraId = $parent.dataset[CAMEL_DATASET_IDENTIFIER_EXTRA];\n        $wrap = document.createElement('span');\n        $wrap.classList.add(className);\n\n        $wrap.dataset[CAMEL_DATASET_IDENTIFIER] = range.id;\n        $wrap.dataset[CAMEL_DATASET_IDENTIFIER_EXTRA] = parentExtraId\n            ? parentExtraId + ID_DIVISION + parentId\n            : parentId;\n        $wrap.appendChild(selected.$node.cloneNode(false));\n\n        let headSplit = false;\n        let tailSplit = false;\n        let splitType: SplitType;\n\n        if ($prev) {\n            const $span = $parent.cloneNode(false);\n            $span.textContent = $prev.textContent;\n            $fr.appendChild($span);\n            headSplit = true;\n        }\n\n        $fr.appendChild($wrap);\n\n        if ($next) {\n            const $span = $parent.cloneNode(false);\n            $span.textContent = $next.textContent;\n            $fr.appendChild($span);\n            tailSplit = true;\n        }\n\n        if (headSplit && tailSplit) {\n            splitType = SplitType.both;\n        }\n        else if (headSplit) {\n            splitType = SplitType.head;\n        }\n        else if (tailSplit) {\n            splitType = SplitType.tail;\n        }\n        else {\n            splitType = SplitType.none;\n        }\n\n        $wrap.dataset[CAMEL_DATASET_SPLIT_TYPE] = splitType;\n        $parent.parentNode.replaceChild($fr, $parent);\n    }\n    // completely overlap (with a highlight wrap) -> only add extra id info\n    else {\n        $wrap = $parent;\n        const dataset = $parent.dataset;\n        dataset[CAMEL_DATASET_IDENTIFIER_EXTRA] = dataset[CAMEL_DATASET_IDENTIFIER_EXTRA]\n            ? dataset[CAMEL_DATASET_IDENTIFIER_EXTRA] + ID_DIVISION + range.id\n            : range.id;\n    }\n    return $wrap;\n};\n\n/**\n * render range into highlight status\n */\nexport function render(\n    $root: HTMLElement|Document,\n    range: HighlightRange,\n    exceptSelectors: Array<string>,\n    className?: string\n): Array<HTMLElement> {\n    const {\n        start: {$node: $startNode, offset: startOffset},\n        end: {$node: $endNode, offset: endOffset}\n    } = range;\n    const nodes = getSelectedNodes($root, $startNode, $endNode, startOffset, endOffset, exceptSelectors);\n    return nodes.map(n => wrapHighlight(n, range, className));\n};\n","import HighlightSource from '../../model/source';\nimport {Store, StoreType} from './types';\nimport {resolve} from '../../util/defer';\nimport {LOCAL_STORE_KEY} from '../../util/const';\n\ntype StoreInfo = {\n    hs: HighlightSource,\n    info?: any\n};\n\nclass LocalStore implements Store<StoreInfo> {\n    type = StoreType.LOCAL;\n    key = LOCAL_STORE_KEY;\n\n    storeToJson(): StoreInfo[] {\n        const store = localStorage.getItem(this.key);\n        let sources;\n        try {\n            sources = JSON.parse(store) || [];\n        }\n        catch (e) {\n            sources = [];\n        }\n        return sources;\n    }\n\n    jsonToStore(stores: StoreInfo[]): void {\n        localStorage.setItem(this.key, JSON.stringify(stores));\n    }\n\n    save(data: StoreInfo | StoreInfo[]): Promise<boolean> {\n        const stores: StoreInfo[] = this.storeToJson();\n        const map = {};\n        stores.forEach((store, idx) => map[store.hs.id] = idx);\n\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n\n        data.forEach(store => {\n            // update\n            if (map[store.hs.id] !== undefined) {\n                stores[map[store.hs.id]] = store;\n            }\n            // append\n            else {\n                stores.push(store);\n            }\n        })\n        this.jsonToStore(stores);\n        return resolve(true);\n    }\n\n    forceSave(store: StoreInfo): Promise<boolean> {\n        const stores: StoreInfo[] = this.storeToJson();\n        stores.push(store);\n        this.jsonToStore(stores);\n        return resolve(true);\n    }\n\n    get(id: string) {\n        const list = this.storeToJson()\n            .filter(store => store.hs.id === id)\n            .map(store => ({\n                hs: new HighlightSource(\n                    store.hs.startMeta,\n                    store.hs.endMeta,\n                    store.hs.text,\n                    store.hs.id\n                ),\n                info: store.info\n            }));\n        return resolve<StoreInfo>(list[0]);\n    }\n\n    remove(id: string) {\n        const stores: StoreInfo[] = this.storeToJson();\n        let index: number = null;\n        for (let i = 0; i < stores.length; i++) {\n            if (stores[i].hs.id === id) {\n                index = i;\n                break;\n            }\n        }\n        stores.splice(index, 1);\n        this.jsonToStore(stores);\n        return resolve<boolean>(true);\n    }\n\n    getAll() {\n        return resolve<StoreInfo[]>(\n            this.storeToJson().map(store => ({\n                hs: new HighlightSource(\n                    store.hs.startMeta,\n                    store.hs.endMeta,\n                    store.hs.text,\n                    store.hs.id\n                ),\n                info: store.info\n            }))\n        );\n    }\n\n    removeAll() {\n        this.jsonToStore([]);\n        return resolve<boolean>(true);\n    }\n}\n\nexport default LocalStore;\n","export enum StoreType {\n    LOCAL = 'localStorage',\n    INDEX_DB = 'indexDB'\n}\n\nexport interface Store<T> {\n    type: StoreType;\n    save(data: T, info?: any): Promise<boolean>;\n    get(id: string): Promise<T>;\n    remove(id: string): Promise<boolean>;\n    getAll(): Promise<T[]>;\n    removeAll(): Promise<boolean>;\n}","interface Defer<T> {\n    promise: Promise<T>,\n    resolve: Function,\n    reject: Function\n};\n\nexport default function getDefer<T>(): Defer<T> {\n    let promise: Promise<T>;\n    let resolve: Function;\n    let reject: Function;\n    promise = new Promise((r, j) => {\n        resolve = r;\n        reject = j;\n    });\n    return {\n        promise,\n        resolve,\n        reject\n    };\n};\n\nexport const resolve = <T>(data) => {\n    const defer = getDefer<T>();\n    defer.resolve(data);\n    return defer.promise;\n};\n\nexport const reject = <T>(data) => {\n    const defer = getDefer<T>();\n    defer.reject(data)\n    return defer.promise;\n};\n"],"sourceRoot":""}